(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{369:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"web性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web性能优化","aria-hidden":"true"}},[t._v("#")]),t._v(" web性能优化")]),t._v(" "),a("h3",{attrs:{id:"减少http请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少http请求","aria-hidden":"true"}},[t._v("#")]),t._v(" 减少http请求")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("雪碧图")]),t._v(" "),a("p",[t._v("把所有图片合并成一个大图，通过定位来展示对应的图片，减少多张图片发送多个请求")])]),t._v(" "),a("li",[a("p",[t._v("合并js脚本和css样式表")])]),t._v(" "),a("li",[a("p",[t._v("使用内联的图片，把图片进行base64编码")]),t._v(" "),a("p",[t._v("base64编码后的图片是原图的4/3")])])]),t._v(" "),a("h3",{attrs:{id:"使用cdn进行内容分发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用cdn进行内容分发","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用CDN进行内容分发")]),t._v(" "),a("p",[t._v("如果一个web应用的服务器离用户的距离近，那么它的请求事件也会相应的缩短；CDN就是用来做响应分发的，根据用户的ip在CDN上找到离用户最近的web服务的ip地址并返回请求；")]),t._v(" "),a("p",[t._v("CDN通常用来存储静态内容，如图片、脚本样式表等；")]),t._v(" "),a("h3",{attrs:{id:"添加请求头来实现请求缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加请求头来实现请求缓存","aria-hidden":"true"}},[t._v("#")]),t._v(" 添加请求头来实现请求缓存")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Expires")]),t._v(" "),a("p",[t._v("它是在Http1.0提出的，它的值是一个时间戳，Http规范中把定义了Expires的请求认为是在该时间戳之前的请求都是无效的，需要从缓存当中去获取该请求的响应内容；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Expires"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Mon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" Apr "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2024")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("cache-control\n通过设置cache-control的值为max-age，max-age的值是一个秒数的值，表示该请求会缓存的时间长度，使用如下：")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Cache"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" max"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("315360000")]),t._v("\n")])])]),a("h3",{attrs:{id:"gzip压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gzip压缩","aria-hidden":"true"}},[t._v("#")]),t._v(" gzip压缩")]),t._v(" "),a("p",[t._v("减小Http的响应包体积，从而加快响应传输；web客户端通过设置请求的"),a("code",[t._v("Accept-Encoding：gzip")]),t._v("来表示对gzip的压缩支持，服务端通过响应头中的"),a("code",[t._v("Content-Encoding：gzip")]),t._v("来回应客户端的表示对gzip的支持；")]),t._v(" "),a("p",[t._v("它的缺点就是会多出在服务器对响应数据的压缩和在web客户端对数据的解压的时间，需要话费额外的CPU资源，所以使用使用gzip需要权衡是否有必要；")]),t._v(" "),a("h3",{attrs:{id:"配置请求头的etag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置请求头的etag","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置请求头的ETag")]),t._v(" "),a("p",[t._v("对资源通过配置Etag来表示资源的版本，如果资源更改了就重新赋值一个Etag；")]),t._v(" "),a("h2",{attrs:{id:"网络层面的优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络层面的优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 网络层面的优化")]),t._v(" "),a("h3",{attrs:{id:"减少http请求-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少http请求-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 减少http请求")]),t._v(" "),a("h3",{attrs:{id:"雪碧图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#雪碧图","aria-hidden":"true"}},[t._v("#")]),t._v(" 雪碧图")]),t._v(" "),a("p",[t._v("把所有图片合并到一张大图上，然后通过background-position去定位要展示的图片；通过把所有图片合并到一张图上，只发送一次http请求；")]),t._v(" "),a("p",[t._v("优点：显而易见，减少了http的请求")]),t._v(" "),a("p",[t._v("缺点：因为把所有的图片合并到一张图上了，自然增加了图片的体积，因此http请求的速度响应的也会收到影响；其次，浏览器每一次重排都得重新计算图片的位置")]),t._v(" "),a("h3",{attrs:{id:"合并js和css文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并js和css文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 合并JS和CSS文件")]),t._v(" "),a("p",[t._v("通过webpack或者其他打包构建工具把css和js打进一个js包来减少请求次数；")]),t._v(" "),a("p",[t._v("缺点：因为是把css打包进js文件，所以js文件的体积会变大，会影响http请求的速度，同时，打包出的js是通过创建style标签来添加css样式，所以js的运行会阻碍页面的渲染，同时会造成页面的重排重绘，因此该方案需要斟酌使用；")]),t._v(" "),a("h3",{attrs:{id:"利用浏览器缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用浏览器缓存","aria-hidden":"true"}},[t._v("#")]),t._v(" 利用浏览器缓存")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("强缓存 Cache-control")]),t._v(" "),a("p",[t._v("可以通过设置http的条件get或者设置请求头的Expires/Cache-control去设置资源的过期时间，从而减少http的请求；如果在设置的时间内，会直接读缓存，否则会重新去服务器请求资源\n"),a("code",[t._v('Cache-control:"max-age=xxx" // xxx是倒计时')])]),t._v(" "),a("p",[t._v("应用：对于比较固定的资源，如：图片、框架源码等，不会经常修改的")])])]),t._v(" "),a("h3",{attrs:{id:"协商缓存-last-modified-和-etag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存-last-modified-和-etag","aria-hidden":"true"}},[t._v("#")]),t._v(" 协商缓存 Last-Modified 和 Etag")]),t._v(" "),a("p",[t._v("1、Last-Modified上次修改时间，配合 if-Modified-since 使用")]),t._v(" "),a("p",[t._v("通过“"),a("code",[t._v("if-Modified-since<date>")]),t._v("”去请求一个资源，如果服务器的资源在date之后被修改了，请求就会重新去请求资源并返回，返回的代码是200，此时与普通的get请求无异，同时还会在响应头中返回一个"),a("code",[t._v("last-Modified")]),t._v("字段，去重新设置"),a("code",[t._v("date")]),t._v("；")]),t._v(" "),a("p",[t._v("2、Etag 数据签名，配合"),a("code",[t._v("if-None-Match<tag>")]),t._v(" 使用\n“"),a("code",[t._v("if-None-Match<tag>")]),t._v("”通过设置资源的ETag来实现缓存，首次发送请求是，后端可以通过ETag等插件将请求文件进行MD5编码，生成一个唯一标识符作为资源的tag，然后返回给客户端，客户端之后请求就会带上该tag，如果资源变化了就会重新生成tag返回；")]),t._v(" "),a("p",[t._v("对于上面两个条件get，如果条件验证通过会返回304（Not Modified）去重定向资源，去缓存中获取；如果同时使用了两个条件缓存，它们两个需要同时验证通过才会返回304；\n应用层缓存")]),t._v(" "),a("p",[t._v("可以把一些请求的返回结果缓存在浏览器中，例如localStorage，请求前先从缓存中查找是否有，没有再去请求；")]),t._v(" "),a("h3",{attrs:{id:"浏览器的缓存过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的缓存过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 浏览器的缓存过程")]),t._v(" "),a("p",[t._v("浏览器发送请求都会先向浏览器的缓存中去查找有无该请求的缓存结果和缓存标识并返回，如果没有就向服务端发起http请求，并把结果返回，浏览器拿到响应结果后就把响应结果和缓存标识缓存到浏览器的缓存池中；")]),t._v(" "),a("h3",{attrs:{id:"减少请求返回体积"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少请求返回体积","aria-hidden":"true"}},[t._v("#")]),t._v(" 减少请求返回体积")]),t._v(" "),a("ul",[a("li",[t._v("gzip\n通过开启gzip来压缩响应数据的体积，可以在响应头的“"),a("code",[t._v("Content-Encoding")]),t._v("”中查看是否支持了gzip")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("Content-Encoding: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gzip'")]),t._v("\n")])])]),a("p",[t._v("在node端开启gzip可以通过compression中间件来实现：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" express "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("express")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//express框架，前边肯定都是必要的，也就是只需安装compression组件，然后添加一下两句代码就好")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" compression "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'compression'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("compression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("缺点：在客户端需要增加解压的操作")]),t._v(" "),a("h3",{attrs:{id:"图片优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 图片优化")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("png/jpg压缩")]),t._v(" "),a("p",[t._v("对于png的图片，可以通过一些手段先对图片进行压缩再使用；图片通常用jpg/png/gif等；")]),t._v(" "),a("p",[t._v("jpg的特点就是它是有损压缩的，它以24位存储单个图，可以展示约1600万种颜色；不支持透明；")]),t._v(" "),a("p",[t._v("png是无损压缩，通常体积较大，它分为png-8和png-24；它支持透明；")]),t._v(" "),a("p",[t._v("对于复杂的、层次丰富的图片，一般用jpg去存储；而对于颜色简单、对比强烈的图片采用png；")])]),t._v(" "),a("li",[a("p",[t._v("base64\n通过把图片进行base64编码，减少http请求，但同时经过编码后的图片比原图大了4/3；")])]),t._v(" "),a("li",[a("p",[t._v("webp\nwebp是谷歌专为web开发的一种加快图片加速速度的图片格式，它支持有损压缩和无损压缩；缺点就是它在某些浏览器的兼容性问题；")])])]),t._v(" "),a("h3",{attrs:{id:"cdn加速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn加速","aria-hidden":"true"}},[t._v("#")]),t._v(" CDN加速")]),t._v(" "),a("p",[t._v("CDN，即内容分发网络，指的是一组分布在各个地区的服务器，这些服务器保存着数据的副本，因此服务器可以根据哪些服务器离用户近来满足数据的请求；")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("CDN的核心点包括缓存和回源：")]),t._v(" "),a("p",[t._v("缓存：把服务器的资源缓存到CDN服务器上的过程；")]),t._v(" "),a("p",[t._v("回源：如果在CDN服务器上找不到资源或者资源过期，就去它的上层服务器或者根服务器请求该资源；")]),t._v(" "),a("p",[t._v("CDN通常用来访问姿态资源，如图片、css、js等，因为CDN服务器与业务服务器不在同一个域下，因此发送请求的时候不会带上cookie；")])])]),t._v(" "),a("h2",{attrs:{id:"渲染层面的优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染层面的优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 渲染层面的优化")]),t._v(" "),a("h3",{attrs:{id:"ssr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ssr","aria-hidden":"true"}},[t._v("#")]),t._v(" SSR")]),t._v(" "),a("p",[t._v("服务端渲染即服务端传给浏览器的是一个HTML文件流，浏览器拿到后通过渲染引擎去渲染，而客户端渲染因为HTML是没有可展示内容的，展示内容都是通过在js中实现的，可以参见我们平时用React或者Vue进行开发的项目，HTML文件通常是没有任何语义话标签的，就是引用了最终打包出来的js文件，浏览器在渲染时会先执行该js文件去进行页面的渲染，因此客户端的渲染相比服务端渲染通常会导致更长时间的白屏；")]),t._v(" "),a("p",[t._v("但是如果对于访问性很大的网站来说，服务器通常会承载不了这么多的访问，这时就需要通过多台服务器来分担访问了；")]),t._v(" "),a("p",[t._v("客户端的渲染可以通过打包工具（webpack等）把js分开打包，需要用到该js才加载来优化；")]),t._v(" "),a("h3",{attrs:{id:"css优化建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css优化建议","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS优化建议")]),t._v(" "),a("p",[t._v("CSS选择符是从右到左进行匹配的，如：\n#myList ul li{}\n对于上面的例子，浏览器会遍历DOM中的li元素，并确定它的父节点是不是ul，接着还要确认ul的父节点是不是有id属性且值是myList；")]),t._v(" "),a("ul",[a("li",[t._v("具体优化如下：")])]),t._v(" "),a("ol",[a("li",[t._v("避免使用通配符，只对需要用到的元素进行选择")]),t._v(" "),a("li",[t._v("关注可以通过继承实现的属性，避免重复匹配和定义")]),t._v(" "),a("li",[t._v("少用标签选择器")]),t._v(" "),a("li",[t._v("使用了id/类选择器，就没有必要在它后面再加一个标签选择器")]),t._v(" "),a("li",[t._v("减少选择器嵌套，最多不超过三层")])]),t._v(" "),a("h4",{attrs:{id:"css和js资源的加载顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css和js资源的加载顺序","aria-hidden":"true"}},[t._v("#")]),t._v(" css和js资源的加载顺序")]),t._v(" "),a("p",[t._v("css和js都会阻塞渲染的进行，因为HTML的解析是从上到下的，因此它们在HTML中的位置是直观重要的；")]),t._v(" "),a("ul",[a("li",[t._v("css的阻塞\n当浏览器接收到HTML文件流后，就会开启HTML解释器开始解析HTML，当解析到style或者link标签后，就会开启CSSOM的构建，构建完成后会接着执行HTML的解析，如果DOM构造完成但是CSSOM还未构建完成也不会渲染，因为之后的renderObjectree需要DOM与CSSOM进行匹配构造，而且现代浏览器为了解决白屏时间过长，当CSSOM构建完成后会先与已构建的DOM生成renderObject去进行渲染；")])]),t._v(" "),a("p",[t._v("优化：")]),t._v(" "),a("ol",[a("li",[t._v("css放在顶部")]),t._v(" "),a("li",[t._v("利用cdn缓存")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("js的阻塞\n当解析HTML遇到script标签，就会停止html的解析，然后去加载js脚本，如果script是同步的，脚本加载完成后就由js引擎去执行脚本，因此js脚本一般建议放到body的最后；")])]),t._v(" "),a("li",[a("p",[t._v("拓展： 浏览器的渲染引擎和js引擎是互斥的，也就是说，渲染页面和执行js只能执行一个")])])]),t._v(" "),a("h3",{attrs:{id:"dom渲染优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom渲染优化","aria-hidden":"true"}},[t._v("#")]),t._v(" DOM渲染优化")]),t._v(" "),a("h4",{attrs:{id:"异步更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步更新","aria-hidden":"true"}},[t._v("#")]),t._v(" 异步更新")]),t._v(" "),a("p",[t._v("异步更新通常是使用框架的内部已经实现的优化，vue实现页面的更新是通过把组件的渲染watcher保存在一个队列中，通过异步队列去实现更新，react的更新原理应该跟vue差不多；")]),t._v(" "),a("p",[t._v("在vue中是通过$nextTick去执行页面的更新，在$nextTick中通过遍历执行依赖收集的watcher的update方法；通过一个队列去实现异步更新，一方面可以防止同一个渲染watcher更新多次，比如一个组件访问了多个响应式数据，如果是同步更新，那么每一个数据的更改都会触发watcher的update，通过在异步队列中执行，如果同一个watcher已在队列中就不会再收集该watcher了，不管哪个响应式数据变更，最后更新页面展示的都是最新的结果；另一方面就是多次重复修改一个数据触发更行内部会进行一个阀值判断，超过该阀值(100)就会发出警告；")]),t._v(" "),a("h4",{attrs:{id:"防抖-debounce-与节流-throttle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防抖-debounce-与节流-throttle","aria-hidden":"true"}},[t._v("#")]),t._v(" 防抖(debounce)与节流(throttle)")]),t._v(" "),a("p",[t._v("进行防抖和节流主要是通过setTimeout去控制事件的触发频率；")]),t._v(" "),a("ul",[a("li",[t._v("节流")])]),t._v(" "),a("p",[t._v("即不管事件触发多少次，只执行第一次：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addListeners")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'scroll'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n      timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("节流除了使用setTimeout还可以使用定义两个时间戳，通过时间戳的差来执行相应的回调；")]),t._v(" "),a("ul",[a("li",[t._v("防抖")])]),t._v(" "),a("p",[t._v("与节流相反，不管事件触发多少次，只认最后一次：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addListeners")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'scroll'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"重排重绘优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重排重绘优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 重排重绘优化")]),t._v(" "),a("p",[t._v("更改节点的与布局相关的属性都会导致重排，比如：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("盒子模型相关属性：\nwidth/height")]),t._v(" "),a("p",[t._v("margin/padding")]),t._v(" "),a("p",[t._v("border-width")]),t._v(" "),a("p",[t._v("display")])]),t._v(" "),a("li",[a("p",[t._v("定位及浮动：")]),t._v(" "),a("p",[t._v("position")]),t._v(" "),a("p",[t._v("top/left/bottom/right")]),t._v(" "),a("p",[t._v("float/clear")])]),t._v(" "),a("li",[a("p",[t._v("改变节点内部文字结构：")]),t._v(" "),a("p",[t._v("font-size/font-weight")]),t._v(" "),a("p",[t._v("line-height")])])]),t._v(" "),a("p",[t._v("text-align")]),t._v(" "),a("p",[t._v("...")]),t._v(" "),a("ul",[a("li",[t._v("重绘的触发是有颜色/背景等相关样式修改；")])]),t._v(" "),a("p",[t._v("web应用应该避免高频率的重排，对于一些更改布局的样式应高统一执行而不是每更改一次就执行一次，如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" elem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'container1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nelem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("borderLeft "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重排重绘")]),t._v("\nelem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("borderRight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重排重绘")]),t._v("\nelem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重绘")]),t._v("\nelem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("padding "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重排重绘")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeEnd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//（4: 0.303ms）")]),t._v("\n")])])]),a("p",[t._v("浏览器内部会对此进行优化，它会把上述重排保存在一个栈中统一执行，而不是进行4次重排；但是如果去访问了布局信息浏览器就会开始进行重排，如：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" elem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'container1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nelem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("borderLeft "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nelem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetWidth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问元素宽度，触发重排重绘")]),t._v("\nelem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("borderRight "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nelem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetWidth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问元素宽度，触发重排重绘")]),t._v("\nelem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'blue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nelem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("padding "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nelem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetWidth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问元素宽度，触发重排重绘")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeEnd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//（5: 11.944ms）")]),t._v("\n")])])]),a("p",[t._v("如上，由于去访问了节点的布局信息，所以会进行3次重排；可以重打印的时间知道，重排对于渲染的性能消耗；")]),t._v(" "),a("ul",[a("li",[t._v("如何优化：")])]),t._v(" "),a("ol",[a("li",[t._v("给元素固定宽高，如图片，如果未固定宽高，在图片加载出来后就会进行重新布局")]),t._v(" "),a("li",[t._v("使用display：none把节点下线，操作完节点，比如新增子节点或者修改它的布局信息，修改完后在挂载到DOM树上")]),t._v(" "),a("li",[t._v("通过修改节点的class来实现多个样式的修改，而不是逐个去修改")]),t._v(" "),a("li",[t._v("采用硬件加速，如使用css3的“will-change”属性，或者使用“transform: translate3D/translateZ”开启GPU加速")]),t._v(" "),a("li",[t._v("对于动画，通过绝对定位使它单独作为一个渲染层，不影响其他元素的布局")])]),t._v(" "),a("p",[t._v("简化版")]),t._v(" "),a("ul",[a("li",[t._v("content方面")])]),t._v(" "),a("ol",[a("li",[t._v("减少HTTP请求：合并文件、CSS精灵、inline Image")]),t._v(" "),a("li",[t._v("减少DNS查询：DNS缓存、将资源分布到恰当数量的主机名")]),t._v(" "),a("li",[t._v("减少DOM元素数量")])]),t._v(" "),a("ul",[a("li",[t._v("Server方面")])]),t._v(" "),a("ol",[a("li",[t._v("使用CDN")]),t._v(" "),a("li",[t._v("配置ETag")]),t._v(" "),a("li",[t._v("对组件使用Gzip压缩")])]),t._v(" "),a("ul",[a("li",[t._v("Cookie方面")])]),t._v(" "),a("ol",[a("li",[t._v("减小cookie大小")])]),t._v(" "),a("ul",[a("li",[t._v("css方面")])]),t._v(" "),a("ol",[a("li",[t._v("将样式表放到页面顶部")]),t._v(" "),a("li",[t._v("不使用CSS表达式")]),t._v(" "),a("li",[t._v("使用"),a("link"),t._v("不使用@import")])]),t._v(" "),a("ul",[a("li",[t._v("Javascript方面")])]),t._v(" "),a("ol",[a("li",[t._v("将脚本放到页面底部")]),t._v(" "),a("li",[t._v("将javascript和css从外部引入")]),t._v(" "),a("li",[t._v("压缩javascript和css")]),t._v(" "),a("li",[t._v("删除不需要的脚本")]),t._v(" "),a("li",[t._v("减少DOM访问")])]),t._v(" "),a("ul",[a("li",[t._v("图片方面")])]),t._v(" "),a("ol",[a("li",[t._v("优化图片：根据实际颜色需要选择色深、压缩")]),t._v(" "),a("li",[t._v("优化css精灵")]),t._v(" "),a("li",[t._v("不要在HTML中拉伸图片")])]),t._v(" "),a("blockquote",[a("p",[t._v("https://www.yuque.com/books/share/ea55261b-dffd-44ba-9002-05fc0d55b9c5/gy32ao")])])])}],!1,null,null,null);s.default=e.exports}}]);