(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{268:function(t,e,s){t.exports=s.p+"assets/img/step1.64d5137d.png"},443:function(t,e,s){"use strict";s.r(e);var a=[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"git-用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-用法","aria-hidden":"true"}},[this._v("#")]),this._v(" git 用法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"管理git生成的多个ssh-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#管理git生成的多个ssh-key","aria-hidden":"true"}},[this._v("#")]),this._v(" 管理git生成的多个ssh key")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"问题阐述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题阐述","aria-hidden":"true"}},[this._v("#")]),this._v(" 问题阐述")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("当有多个git账号的时候，比如一个github，用于自己进行一些开发活动，再来一个gitlab，一般是公司内部的git。这两者你的邮箱如果不同的话，就会涉及到一个问题，生成第二个git的key的时候会覆盖第一个的key，导致必然有一个用不了。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"问题解决"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题解决","aria-hidden":"true"}},[this._v("#")]),this._v(" 问题解决")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("我们可以在~/.ssh目录下新建一个config文件配置一下，就可以解决问题")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"具体步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#具体步骤","aria-hidden":"true"}},[this._v("#")]),this._v(" 具体步骤")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("生成第一个ssh key(这里我用于github，用的gmail邮箱)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("ssh-keygen -t rsa -C "),e("span",{pre:!0,attrs:{class:"token string"}},[this._v('"yourmail@gmail.com"')]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("这里不要一路回传，让你选择在哪里选择存放key的时候写个名字，比如 id_rsa_github，之后的两个可以回车。\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("完成之后我们可以看到~/.ssh目录下多了两个文件\n~/.ssh目录下的文件\n"),e("img",{attrs:{src:s(268),alt:"step1"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("生成第二个ssh key（这里我用于gitlab，用的是公司邮箱）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("ssh-keygen -t rsa -C "),e("span",{pre:!0,attrs:{class:"token string"}},[this._v('"yourmail@gmail.com"')]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("打开ssh-agent")]),this._v(" "),e("p",[this._v("这里如果你用的github官方的bash，ssh-agent -s,如果是其他的，比如msysgit,eval $(ssh-agent -s)")])]),this._v(" "),e("li",[e("p",[this._v("添加私钥")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("ssh-add ~/.ssh/id_rsa_github\nssh-add ~/.ssh/id_rsa_gitlab\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("创建并修改config文件")]),this._v(" "),e("p",[this._v("在windows下新建一个txt文本，然后将名字后缀一起改成config即可")]),this._v(" "),e("p",[this._v("在bash下的话直接touch config 即可。")]),this._v(" "),e("p",[this._v("添加一下内容")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[this._v("# gitlab")]),this._v("\nHost git.iboxpay.com\n    HostName git.iboxpay.com  //这里填你们公司的git网址即可\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/id_rsa_gitlab\n    User zhangjun\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[this._v("# github")]),this._v("\nHost github.com\n    HostName github.com\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/id_rsa_github\n    User ZJsnowman\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[t._v("在github和gitlab上添加公钥即可，这里不再多说。")])]),t._v(" "),s("li",[s("p",[t._v("测试")]),t._v(" "),s("p",[t._v("ssh -T git@github.com")]),t._v(" "),s("p",[t._v("分别测试githab和gitlub")]),t._v(" "),s("p",[t._v("PS:如果到这里你没有成功的话，别急，教你解决问题的终极办法--debug")]),t._v(" "),s("p",[t._v("比如测试github，ssh -vT git@github.com")]),t._v(" "),s("p",[t._v("-v 是输出编译信息，然后根据编译信息自己去解决问题吧。就我自己来说一般是config里的host那块写错了。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"补充一下"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#补充一下","aria-hidden":"true"}},[this._v("#")]),this._v(" 补充一下")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" config --global --unset user.name\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" config --global --unset user.email\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"查看直接的全局配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看直接的全局配置","aria-hidden":"true"}},[this._v("#")]),this._v(" 查看直接的全局配置")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" config -l --global\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"设置远程git的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置远程git的方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 设置远程git的方法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("auth 杜若")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("查看自己的用户名和邮箱地址：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" config user.name\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" config user.email\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("(全局)修改自己的用户名和邮箱地址：")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("(局部)修改自己的用户名和邮箱地址")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gitlab’s Name"')]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.email "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gitlab@xx.com"')]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("查看配置信息")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" config list\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git本地链接远程仓库的方法（ps：写过代码之后再提交到远程仓库）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git本地链接远程仓库的方法（ps：写过代码之后再提交到远程仓库）","aria-hidden":"true"}},[this._v("#")]),this._v(" git本地链接远程仓库的方法（ps：写过代码之后再提交到远程仓库）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("先在本地 $ git init，之后")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin git@github.com:han1202012/TabHost_Test.git"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("你的git仓库地址"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // 添加仓库地址\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url origin git@git.tian.com:oliv/test.git "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("两个都行"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // 修改仓库地址\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("列显已有的标签")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" tag\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("只对1.4.2系列的版本感兴趣")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" tag -l "),e("span",{pre:!0,attrs:{class:"token string"}},[this._v("'v1.4.2.*'")]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("新建标签")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -a v1.4 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my version 1.4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag\nv0.1\nv1.4\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("把-a换成-s属于签署标签")]),this._v(" "),e("li",[this._v("可以使用 git show 命令查看相应标签的版本信息，并连同显示打标签时的提交对象。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"3"}},[e("li",[this._v("验证标签")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("可以使用 git tag -v [tag-name] （译注：取 verify 的首字母）的方式验证已经签署的标签。此命令会调用 GPG 来验证签名，所以你需要有签署者的公钥，存放在 keyring 中，才能验证")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"4"}},[e("li",[this._v("验证标签")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("后期加注标签")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --pretty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 展示提交历史")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -a v0.1 9fceb02  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对应提交对象的校验和（或前几位字符）")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"5"}},[e("li",[this._v("分享标签（把tag标签提交给远程）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("默认情况下，git push 并不会把标签传送到远端服务器上，只有通过显式命令才能分享标签到远端仓库。其命令格式如同推送分支，运行 git push origin [tagname] 即可：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" push origin v1.5\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" push --tags   //如果要一次推送所有本地新增的标签上去，可以使用 --tags 选项\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"6"}},[e("li",[this._v("删除远程tag")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin --delete tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tagname"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -d 20181127  删除本地tag\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("想切换分支，并且不想提交正在进行的工作，所有需要储藏这些变更")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (自己变动的目录)")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 目录清理干净")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("这时，你可以方便地切换到其他分支工作；你的变更都保存在栈上。要查看现有的储藏，你可以使用 git stash list：")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash list  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自己储藏的列表")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最新实施的储藏，为默认")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply stash@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指明哪个")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("从储藏中创建分支")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" stash branch dev   // 相当于把master分支提交到了新创建的dev分支\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("由于误操作或者其他原因，commit丢失了，不要谎，我们在Git上做的任何操作都只是在原来之前的操作上做修改，并且会被记录下来保存，也就是说无论你做了什么，对于Git来说都可以进行回滚操作。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" reflog\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" reset --hard 88888 // 版本号\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" log // 已恢复\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git-reset-的具体用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-的具体用法","aria-hidden":"true"}},[this._v("#")]),this._v(" git reset 的具体用法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("git reset [--hard|soft|mixed|merge|keep] [<commit>或HEAD]")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("作用：将当前分支reset到指定的<commit>或者HEAD(默认为最新的一次提交，即重设到最新一次提交之前的版本)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("hard(慎用)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("重设index和working tree,所有改变都会被丢弃，包括文件的修改、新增、删除等操作，并把HEAD指向<commit>，\n因此通过git log查看版本提交记录，被reset的版本记录会被丢弃，但可以通过git reflog查看")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("soft")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("不重设index和working tree,仅仅将HEAD指向<commit>,表示已经commit的文件会取消commit,\n通过git status查看，文件会处于待commit状态“Changes to be committed”")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"3"}},[e("li",[this._v("mixed(默认)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("重设index,但不重设working tree,表示已经被add的文件，被取消add，\n通过git status查看，文件会处于待添加索引状态 “Changes not staged for commit”")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"4"}},[e("li",[this._v("merge")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("重设index，重设working tree中发生变化的文件，但是保留index和working tree不一致的文件")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"5"}},[e("li",[this._v("keep")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("重设index，重设working tree中发生变化的文件")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" merge master  // 将当前分支和最新的master代码合并\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" push origin seo -f // 强制覆盖\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"记录的保存问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#记录的保存问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 记录的保存问题###")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" config gc.pruneexpire "),e("span",{pre:!0,attrs:{class:"token string"}},[this._v('"30 days"')]),this._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" config gc.auto 0\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"删除github中某个文件夹"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除github中某个文件夹","aria-hidden":"true"}},[this._v("#")]),this._v(" 删除github中某个文件夹")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("在github上只能删除仓库,却无法删除文件夹或文件, 所以只能通过命令来解决")]),this._v(" "),e("li",[this._v("首先进入你的master文件夹下, Git Bash Here ,打开命令窗口")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" --help 帮助命令\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin master 将远程仓库里面的项目拉下来\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dir")]),t._v("  查看有哪些文件夹\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -r --cached target  删除target文件夹\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'删除了target'")]),t._v("  提交,添加操作说明\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master 将本次更改更新到github项目上去\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("注:本地项目中的target文件夹不收操作影响,删除的只是远程仓库中的target, 可放心删除\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"save和-save-dev的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#save和-save-dev的区别","aria-hidden":"true"}},[this._v("#")]),this._v(" --save和--save-dev的区别")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("--save-dev 是你开发时候依赖的东西，")])]),this._v(" "),e("li",[e("p",[this._v("--save 是你发布之后还依赖的东西。")]),this._v(" "),e("p",[this._v("比如，你写 ES6 代码，如果你想编译成 ES5 发布那么 babel 就是devDependencies。\n如果你用了 jQuery，由于发布之后还是依赖jQuery，所以是dependencies。\n但是在 npm 里面除了二进制的依赖，似乎也不用区分是不是dev。\n因为使用npm就是自己编译的意思，而不使用npm直接拿编译后的版本的，这些依赖项也看不到。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"配置npm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置npm","aria-hidden":"true"}},[this._v("#")]),this._v(" 配置npm")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("npm")]),this._v(" config list //查看配置列表\n~/.npmrc  // 把 registry"),e("span",{pre:!0,attrs:{class:"token operator"}},[this._v("=")]),this._v("https://registry.npm.taobao.org 放在里面\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"将某一次分支的某一次提交放到另一个分支上"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将某一次分支的某一次提交放到另一个分支上","aria-hidden":"true"}},[this._v("#")]),this._v(" 将某一次分支的某一次提交放到另一个分支上")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" cherry-pick e7bed5e // commitId\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" push -f\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"如果有多个提交可以用如下命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如果有多个提交可以用如下命令","aria-hidden":"true"}},[this._v("#")]),this._v(" 如果有多个提交可以用如下命令")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" cherry-pick commitid1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[this._v("..")]),this._v("commitid10\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"分支操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支操作","aria-hidden":"true"}},[this._v("#")]),this._v(" 分支操作")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" branch // 列出本地已经存在的分支，并且在当前分支的前面加“*”号标记\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" branch -r // 列出远程分支\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" branch -a // 列出本地分支和远程分支\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"github删除本地分支和远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github删除本地分支和远程分支","aria-hidden":"true"}},[this._v("#")]),this._v(" github删除本地分支和远程分支")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" branch -d developbranch\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" branch -D developbranch\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" push origin --delete developbranch\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git-根据tag创建分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-根据tag创建分支","aria-hidden":"true"}},[this._v("#")]),this._v(" git 根据tag创建分支")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"覆盖远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#覆盖远程分支","aria-hidden":"true"}},[this._v("#")]),this._v(" 覆盖远程分支")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" push --force\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git忽略规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git忽略规则","aria-hidden":"true"}},[this._v("#")]),this._v(" Git忽略规则")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("*.sample  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 忽略所有 .sample 结尾的文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("lib.sample  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 但 lib.sample 除外")]),t._v("\n/TODO  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO")]),t._v("\nbuild/  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 忽略 build/ 目录下的所有文件")]),t._v("\ndoc/*.txt "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"gitignore规则不生效的解决办法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitignore规则不生效的解决办法","aria-hidden":"true"}},[this._v("#")]),this._v(" .gitignore规则不生效的解决办法")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -r --cached "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 误操作使用之后可以用git reset 还原")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'update .gitignore'")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git-pull出现there-is-no-tracking-information-for-the-current-branch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-pull出现there-is-no-tracking-information-for-the-current-branch","aria-hidden":"true"}},[this._v("#")]),this._v(" git pull出现There is no tracking information for the current branch")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("此问题是指本地的分支和远程的分支之间需要建立联系。如：本地master对应远程的master")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" branch --set-upstream-to"),e("span",{pre:!0,attrs:{class:"token operator"}},[this._v("=")]),this._v("origin/master master\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"分支后面出现r的原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支后面出现r的原因","aria-hidden":"true"}},[this._v("#")]),this._v(" 分支后面出现R的原因")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[this._v("  "),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("rm")]),this._v(" -fr "),e("span",{pre:!0,attrs:{class:"token string"}},[this._v('".git/rebase-merge"')]),this._v("\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git-init-之后删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-init-之后删除","aria-hidden":"true"}},[this._v("#")]),this._v(" git init 之后删除")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("rm")]),this._v(" -rf .git \n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git-clone时加上-depth-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-clone时加上-depth-1","aria-hidden":"true"}},[this._v("#")]),this._v(" git clone时加上--depth 1")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --depth 1 https://github.com/dogescript/xxxxxxx.git\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-branches origin "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'remote_branch_name'")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch --depth 1 origin remote_branch_name\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout remote_branch_name\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git-单独还原某个文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-单独还原某个文件","aria-hidden":"true"}},[this._v("#")]),this._v(" git 单独还原某个文件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" log 文件名字\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[this._v("# 复制最新的hash")]),this._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" checkout ef056c983990640bfa6bc3f5026095f5577aa4ef 文件路径+文件名字\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git-重新建立tag，依赖他的分支会报错"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-重新建立tag，依赖他的分支会报错","aria-hidden":"true"}},[this._v("#")]),this._v(" git 重新建立tag，依赖他的分支会报错")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("error Command failed.\nExit code: 1\nCommand: "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("\nArguments: fetch --tags\nDirectory: Caches/Yarn/v6/.tmp/87f8c5b7119a0a5dba86e8f9ed2ec2957ef\nOutput:\n来自 git@git.olivying.com:sou/egg-test\n   12f9e8b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("ba38141  dev        -"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" origin/dev\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("已拒绝"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("          v1.0.0    -"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" v1.0.0 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("会破坏现有的标签"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[this._v("git")]),this._v(" fetch --tags\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[this._v("# 或者")]),this._v("\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git常用缩写"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git常用缩写","aria-hidden":"true"}},[this._v("#")]),this._v(" git常用缩写")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status --- gst\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash save --- gsta\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply --- gstaa\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull --- gl\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git-shortlog-s-n"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-shortlog-s-n","aria-hidden":"true"}},[this._v("#")]),this._v(" git shortlog -s -n")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git-clean-dfx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-clean-dfx","aria-hidden":"true"}},[this._v("#")]),this._v(" git clean -dfx")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git-命令简写"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-命令简写","aria-hidden":"true"}},[this._v("#")]),this._v(" git 命令简写")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("简写")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("命令")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("g")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gst")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git status")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gd")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git diff")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gl")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git pull")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gup")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git pull --rebase")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gp")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git push")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gcmsg")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git commit -m")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gco")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git checkout")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gr")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git remote")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("grv")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git remote -v")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("grmv")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git remote rename")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("grset")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git remote remove")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("grset")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git remote set-url")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("grup")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git remote update")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("grbi")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git rebase -i")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("grbc")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git rebase --continue")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("grba")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git rebase --abort")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gb")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git branch")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gba")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git branch -a")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gcount")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git shortlog -sn 查看")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gcl")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git config --list")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gcp")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git cherry-pick")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("glg")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git log --stat --max-count=10")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("glgg")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git log --graph --decorate --all")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("glgga")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git log --graph --decorate --all")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("glo")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git log --oneline --decorate --color")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("glog")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git log --oneline --decorate --color --graph")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gss")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git status -s")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("ga")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git add")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gm")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git merge")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("grh")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git reset HEAD")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("grhh")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git reset HEAD --hard")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gclean")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git reset --hard && git clean -dfx")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("gsta")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("git stash")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"放弃文件修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#放弃文件修改","aria-hidden":"true"}},[this._v("#")]),this._v(" 放弃文件修改")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("放弃所有文件修改\n"),e("code",[this._v("git checkout .")]),this._v("\n放弃单个文件修改\n"),e("code",[this._v("git checkout -- filepathname")])])}],i=s(0),r=Object(i.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),s("p",[t._v("还是一样不要一路回车，在第一个对话的时候继续写个名字，比如 id_rsa_gitlab,之后的两个可以回车。")]),t._v(" "),s("p",[t._v("完成之后我们可以看到如2中图所标记，一样出现两个文件。（一个公钥一个私钥）")]),t._v(" "),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._v(" "),s("p",[t._v("如果之前有设置全局用户名和邮箱的话，需要unset一下")]),t._v(" "),t._m(19),s("p",[t._v('然后在不同的仓库下设置局部的用户名和邮箱\n比如在公司的repository下git config user.name "yourname" git config user.email "youremail" 在自己的github的仓库在执行刚刚的命令一遍即可。\n这样就可以在不同的仓库，已不同的账号登录。')]),t._v(" "),t._m(20),t._v(" "),t._m(21),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._m(26),t._v(" "),t._m(27),t._m(28),t._v(" "),t._m(29),t._m(30),t._v(" "),t._m(31),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),s("h2",{attrs:{id:"tag问题，git-基础-打标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tag问题，git-基础-打标签","aria-hidden":"true"}},[t._v("#")]),t._v(" tag问题，"),s("a",{attrs:{href:"https://git-scm.com/book/zh/v1/Git-%E5%9F%BA%E7%A1%80-%E6%89%93%E6%A0%87%E7%AD%BE",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 基础 - 打标签"),s("OutboundLink")],1)]),t._v(" "),t._m(35),t._v(" "),t._m(36),t._m(37),t._v(" "),t._m(38),t._m(39),t._v(" "),t._m(40),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._m(50),t._v(" "),t._m(51),s("h2",{attrs:{id:"git-工具-储藏（stashing）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-工具-储藏（stashing）","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://git-scm.com/book/zh/v1/Git-%E5%B7%A5%E5%85%B7-%E5%82%A8%E8%97%8F%EF%BC%88Stashing%EF%BC%89",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 工具 - 储藏（Stashing）"),s("OutboundLink")],1)]),t._v(" "),t._m(52),t._v(" "),t._m(53),t._m(54),t._v(" "),t._m(55),t._m(56),t._v(" "),t._m(57),s("h2",{attrs:{id:"找回丢失的commit-参考找回git中丢失的commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#找回丢失的commit-参考找回git中丢失的commit","aria-hidden":"true"}},[t._v("#")]),t._v(" 找回丢失的commit 参考"),s("a",{attrs:{href:"https://www.jianshu.com/p/8b4c95677ee0",target:"_blank",rel:"noopener noreferrer"}},[t._v("找回Git中丢失的Commit"),s("OutboundLink")],1)]),t._v(" "),t._m(58),t._v(" "),t._m(59),t._m(60),t._v(" "),t._m(61),t._v(" "),t._m(62),t._v(" "),s("p",[t._v("index，执行git add的操作，会对文件创建索引，所有被跟踪的文件索引会放入index，表示文件被修改待提交\nworking tree，当前工作区，被修改但未被add的文件，存储在工作区\nORIG_HEAD,用于指向前一个操作状态,每次的commit或者pull或者reset，git 都会把老的HEAD拷贝到.git/ORIG_HEAD，通过对ORIG_HEAD的引用可以指向前一次的操作状态")]),t._v(" "),t._m(63),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._v(" "),t._m(67),t._v(" "),t._m(68),t._v(" "),t._m(69),t._v(" "),t._m(70),t._v(" "),t._m(71),t._v(" "),t._m(72),t._v(" "),t._m(73),t._m(74),t._v(" "),s("p",[t._v("我们前面说到在Git上做的所有操作都被保存到记录里，一般是从你本地Git库执行clone开始的所有操作都保存了下来，所以不用担心很久之前的一些Commit log找不到，你或许期望去为已删除的提交设置一个更长的保存周期。例如：")]),t._v(" "),t._m(75),s("p",[t._v("意思是一个被删除的提交会在删除30天后，且运行 git gc 以后，被永久丢弃。\n你或许还想关掉 git gc 的自动运行：")]),t._v(" "),t._m(76),s("p",[t._v("在这种情况下提交将只在你手工运行 git gc 的情况下才永久删除。")]),t._v(" "),t._m(77),t._v(" "),t._m(78),t._v(" "),t._m(79),t._m(80),t._v(" "),s("p",[t._v("每次增加文件或删除文件，都要commit 然后直接 git push -u origin master，就可以同步到github上了")]),t._v(" "),s("h2",{attrs:{id:"githug通关流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#githug通关流程","aria-hidden":"true"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://www.jianshu.com/p/482b32716bbe",target:"_blank",rel:"noopener noreferrer"}},[t._v("githug通关流程"),s("OutboundLink")],1)]),t._v(" "),t._m(81),t._v(" "),t._m(82),t._v(" "),t._m(83),t._v(" "),t._m(84),t._m(85),t._v(" "),t._m(86),t._m(87),t._v(" "),t._m(88),t._m(89),t._v(" "),t._m(90),t._m(91),t._v(" "),s("p",[t._v("删除本地分支：git branch -d 分支名称")]),t._v(" "),s("p",[t._v("强制删除本地分支：git branch -D 分支名称")]),t._v(" "),s("p",[t._v("删除远程分支：git push origin --delete 分支名称")]),t._v(" "),t._m(92),s("p",[t._v("注意：删除分支就不可以撤销。删除分支前需要慎重。")]),t._v(" "),t._m(93),t._v(" "),s("p",[t._v("在项目中我们需要根据tag创建分支.现将创建步骤总结一下.假设在你的主分支上有一个tag为v1.0,主分支的名字为master.")]),t._v(" "),s("p",[t._v("1.执行:git origin fetch 获得最新.")]),t._v(" "),s("p",[t._v("2.通过:git branch <new-branch-name> <tag-name> 会根据tag创建新的分支.")]),t._v(" "),s("p",[t._v("例如:git branch newbranch v1.0 . 会以tag v1.0创建新的分支newbranch;")]),t._v(" "),s("p",[t._v("3.可以通过git checkout newbranch 切换到新的分支.")]),t._v(" "),s("p",[t._v("4.通过 git push origin newbranch 把本地创建的分支提交到远程仓库.")]),t._v(" "),s("p",[t._v("现在远程仓库也会有新创建的分支啦.")]),t._v(" "),t._m(94),t._v(" "),t._m(95),t._m(96),t._v(" "),t._m(97),t._m(98),t._v(" "),s("p",[t._v("把某些目录或文件加入忽略规则，按照上述方法定义后发现并未生效，原因是.gitignore只能忽略那些原来没有被追踪的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。那么解决方法就是先把本地缓存删除（改变成未被追踪状态），然后再提交：")]),t._v(" "),t._m(99),t._m(100),t._v(" "),t._m(101),t._v(" "),t._m(102),t._m(103),t._v(" "),s("p",[t._v("错误的执行了rebase；所以会有一个rebase-merge目录")]),t._v(" "),t._m(104),t._m(105),t._v(" "),t._m(106),t._m(107),t._v(" "),s("p",[t._v("当项目过大时，git clone时会出现error: RPC failed; HTTP 504 curl 22 The requested URL returned error: 504 Gateway Time-out的问题")]),t._v(" "),s("p",[t._v("解决方法很简单，在git clone时加上--depth=1即可解决")]),t._v(" "),s("p",[t._v("克隆的项目只包含最近的一次commit的一个分支，体积很小，即可解决文章开头提到的项目过大导致Timeout的问题，但会产生另外一个问题，他只会把默认分支clone下来，其他远程分支并不在本地，所以这种情况下，需要用如下方法拉取其他分支：")]),t._v(" "),t._m(108),t._m(109),t._v(" "),t._m(110),t._m(111),t._v(" "),s("p",[t._v("如：egg-test之前建立tag，egg-provider依赖egg-test，并且已经yarn install，如果删除egg-test的tag，重新建立一摸一样的tag，会报错")]),t._v(" "),t._m(112),s("p",[t._v("解决方法：")]),t._v(" "),t._m(113),t._m(114),t._v(" "),t._m(115),t._m(116),t._v(" "),s("p",[t._v("这个命令会返回这个 git repository 底下每个用户进行 commit 的次数，以及每次 commit 的注释。")]),t._v(" "),s("p",[t._v("-s 参数省略每次 commit 的注释，仅仅返回一个简单的统计。")]),t._v(" "),s("p",[t._v("\b-n 参数按照 commit 数量从多到少的顺利对用户进行排序")]),t._v(" "),t._m(117),t._v(" "),s("p",[t._v("用于强制清洗当前工作区不受git管理的文件或目录，帮助git将当前工作区干净的回退到指定commit version。")]),t._v(" "),t._m(118),t._v(" "),t._m(119),t._v(" "),t._m(120),t._v(" "),t._m(121)])},a,!1,null,null,null);e.default=r.exports}}]);