(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{409:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._m(2),t._v(" "),t._m(3),s("h2",{attrs:{id:"使用tree生成目录结构-参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用tree生成目录结构-参考","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用tree生成目录结构 "),s("a",{attrs:{href:"https://blog.csdn.net/qq673318522/article/details/53713903",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("程序员经常会有需求，需要列出项目的结构树。Mac或者Linux下可以使用tree列出项目结构，如下图这种：")]),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("使用起来也非常简单。\nMac下可以使用brew install tree进行安装。安装后，在terminal中输入tree -a便可以查看某个文件夹下的所有文件。\n常用的命令\n当然了，我们的需求肯定不止列出所有文件这么简单。下面介绍几个常用的命令")]),t._v(" "),t._m(5),t._v(" "),s("p",[t._v("更多命令的使用可以查看tree --help。")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),s("p",[t._v("第一个字符表示文件的性质：")]),t._v(" "),t._m(9),t._v(" "),s("p",[t._v("第2到4个字符表示此文件所有者对此文件的权限\n第5到7个字符表示此文件所属于的组里面的账户对此文件的权限")]),t._v(" "),s("p",[t._v("第8到10个字符表示除了上面两类型的其他用户对此文件的权限")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"mac查看端口号是否被占用及释放"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mac查看端口号是否被占用及释放","aria-hidden":"true"}},[this._v("#")]),this._v(" Mac查看端口号是否被占用及释放")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" -i: 端口号 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看使用端口进程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" 你的PID /"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 释放进程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" -i: 端口号 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 再次执行第一步，是否无进程占用")]),t._v("\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"mac查看进程是否被占用及释放"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mac查看进程是否被占用及释放","aria-hidden":"true"}},[this._v("#")]),this._v(" Mac查看进程是否被占用及释放")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lsof")]),t._v(" -i tcp:8080 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看使用端口进程")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" 你的PID /"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 释放进程")]),t._v("\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("    ├── build\n    ├── config\n    ├── docs\n    │   └── static\n    │       ├── css\n    │       └── js\n    ├── src\n    │   ├── assets\n    │   ├── components\n    │   ├── store\n    │   │   └── modules\n    │   └── views\n    │       ├── book\n    │       └── movie\n    └── static\n")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[s("strong",[t._v("tree -d")]),t._v(" 只显示文件夹；")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("tree -L n")]),t._v(" 显示项目的层级。n表示层级数。比如想要显示项目三层结构，可以用tree -l 3；")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("tree -I pattern")]),t._v(' 用于过滤不想要显示的文件或者文件夹。比如你想要过滤项目中的node_modules文件夹，可以使用tree -I "node_modules"；')])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("tree > tree.md")]),t._v(' 将项目结构输出到tree.md这个文件。\n举个例子，如果我们要显示某个项目下3层的所有文件结构，同时又过滤node_modules文件夹，最后输出到tree.md，可以这么写\ntree -L 3 -I "node_modules"\n1\n结果为：')]),t._v(" "),s("pre",[s("code",[t._v("  .\n  ├── README.md\n  ├── build\n  │   ├── build.js\n  │   ├── check-versions.js\n  ├── config\n  │   ├── dev.env.js\n  │   ├── index.js\n  │   └── prod.env.js\n  ├── docs\n  │   ├── index.html\n  │   └── static\n  │       ├── css\n  │       └── js\n  ├── static\n  └── tree.md\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"chmod-x-sh-给执行权限"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chmod-x-sh-给执行权限","aria-hidden":"true"}},[this._v("#")]),this._v(" chmod +x  .sh 给执行权限")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"查看文件执行权限"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看文件执行权限","aria-hidden":"true"}},[this._v("#")]),this._v(" 查看文件执行权限")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -l "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -la\n\n-rw-r--r--     1 apple  staff     246  7 13 09:49 a.js\ndrwxr-xr-x     7 apple  staff     224  7 13 09:51 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),t._v("\n-rwxr-xr-x     1 apple  staff    2197  7 26 10:58 test.sh\n\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("：表示此行展示的是一个文件\nd：表示此行展示的是一个目录")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("p",[t._v("r (read)：可读，文件可以被查看。")])]),t._v(" "),s("li",[s("p",[t._v("w(write): 可写，文件可以被修改，删除。")])]),t._v(" "),s("li",[s("p",[t._v("x(execute)：可执行，如果文件是脚本活程序，可以被执行。")])]),t._v(" "),s("li",[s("ul",[s("li",[t._v("：无以上权限")])])]),t._v(" "),s("li",[s("p",[t._v("chmod 776 xxx 的命令表示为此文件的所有者和所属的组设置所有权限，为其他用户设置读写权限。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"在pages粘贴不带格式的内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在pages粘贴不带格式的内容","aria-hidden":"true"}},[this._v("#")]),this._v(" 在pages粘贴不带格式的内容")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Option+Shift+Command+V")])])}],!1,null,null,null);e.default=a.exports}}]);