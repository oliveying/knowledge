(window.webpackJsonp=window.webpackJsonp||[]).push([[139],{299:function(t,e,s){"use strict";s.r(e);var a=s(0),r=Object(a.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"http://nodejs.cn/api/crypto.html#crypto_class_hash",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://nodejs.cn/api/crypto.html#crypto_class_hash"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("新增于： v0.1.92")]),t._v(" "),s("p",[t._v("Hash 类是用于创建数据哈希值的工具类。它能用以下方法使用：")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"crypto"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#crypto","aria-hidden":"true"}},[this._v("#")]),this._v(" crypto")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"hash类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hash类","aria-hidden":"true"}},[this._v("#")]),this._v(" Hash类")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("作为一个 stream，它既可读又可写，数据被写入要在可读的方面生成一个计算散列摘要")]),this._v(" "),e("li",[this._v("使用hash.update() 和 hash.digest() 方法产生计算后的哈希。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("crypto.createHash() 方法用于创建 "),e("code",[this._v("Hash")]),this._v(" 实例。"),e("code",[this._v("Hash")]),this._v(" 不能直接用 "),e("code",[this._v("new")]),this._v(" 关键字创建对象。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("示例：使用"),e("code",[this._v("Hash")]),this._v("对象作为流；\n待续～")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code")])])}],!1,null,null,null);e.default=r.exports}}]);