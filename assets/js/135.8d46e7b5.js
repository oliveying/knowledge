(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{313:function(a,s,t){"use strict";t.r(s);var n=t(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("div",{staticClass:"content"},[t("h2",{attrs:{id:"shell脚本中set-e作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell脚本中set-e作用","aria-hidden":"true"}},[a._v("#")]),a._v(" shell脚本中set -e作用")]),a._v(" "),t("ul",[t("li",[a._v("在"),t("code",[a._v("set -e")]),a._v("之后出现的代码，一旦出现了返回值非零，整个脚本就会立即推出，那么就可以避免一些脚本的危险操作")])]),a._v(" "),t("p",[a._v("exit 0 exit 1以及echo $?说明")]),a._v(" "),t("p",[a._v("exit 0 ----正常退出命令")]),a._v(" "),t("p",[a._v("exit 1 ---- 非正常退出命令")]),a._v(" "),t("p",[a._v("exit $? ----获取上次命令执行的结果，如果是0就正常执行，如果非0就是执行出现了异常")]),a._v(" "),t("h2",{attrs:{id:"shell脚本中set-x-作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell脚本中set-x-作用","aria-hidden":"true"}},[a._v("#")]),a._v(" shell脚本中set -x 作用")]),a._v(" "),t("p",[a._v("表示有详细的日志输出，免的老是要echo")]),a._v(" "),t("h2",{attrs:{id:"shell中declare命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell中declare命令","aria-hidden":"true"}},[a._v("#")]),a._v(" shell中declare命令")]),a._v(" "),t("p",[a._v("-a 声明一个数组")]),a._v(" "),t("p",[a._v("-i 声明一个整型")]),a._v(" "),t("p",[a._v("-f 打印所有函数定义")]),a._v(" "),t("p",[a._v("-F 仅打印函数名字")]),a._v(" "),t("p",[a._v("-r 声明一个readonly变量，该变量的值无法改变，并且不能为unset")]),a._v(" "),t("p",[a._v("-x 和export的作用类似")]),a._v(" "),t("h2",{attrs:{id:"shell中的case"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell中的case","aria-hidden":"true"}},[a._v("#")]),a._v(" shell中的case")]),a._v(" "),t("p",[a._v("为多选择语句，可以用case语句匹配一个值与一个模式，如果匹配成功，执行相匹配的命令。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("case")]),a._v(" 值 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v("\n模式1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n     command1\n     command2\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n模式2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n     command1\n     command2\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("   \n     command1\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nesac\n")])])]),t("p",[a._v("case工作方式如上所示。取值后面必须为单词in，每一模式必须以右括号结束。取值可以为变量或常数。匹配发现取值符合某一模式后，其间所有命令开始执行直至 ;;。")]),a._v(" "),t("p",[a._v("取值将检测匹配的每一个模式。一旦模式匹配，则执行完匹配模式相应命令后不再继续其他模式。如果无一匹配模式，使用星号 * 捕获该值，再执行后面的命令。")]),a._v(" "),t("h2",{attrs:{id:"shell-中的if-语句语法格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-中的if-语句语法格式","aria-hidden":"true"}},[a._v("#")]),a._v(" shell 中的if 语句语法格式")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" condition\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n   command1\n   command2\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n   commandN\n")])])]),t("h2",{attrs:{id:"shell-if-和-区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-if-和-区别","aria-hidden":"true"}},[a._v("#")]),a._v(" shell if [[ ]]和[ ]区别 || &&")]),a._v(" "),t("p",[t("code",[a._v("[[]]")]),a._v("\n这是内置在shell中的一个命令。支持字符串的模式匹配（使用=~操作符时甚至支持shell的正则表达式")]),a._v(" "),t("p",[t("code",[a._v("-z")]),a._v(" 判断是否为空")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("abc"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-z "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$abc")]),a._v('"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 当输入不符合自己预期")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v(" \n\n")])])]),t("h2",{attrs:{id:"shell-中的for循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-中的for循环","aria-hidden":"true"}},[a._v("#")]),a._v(" shell 中的for循环")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" var "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" item1 item2 item3 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". itemN\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v("\n  command1\n  command2\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n  commandN\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 写成一行")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" var "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" item1 item2 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(". itemN"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("do")]),a._v(" command1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" command2… "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("done")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n")])])]),t("h2",{attrs:{id:"shell-中本地文件上传到服务命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-中本地文件上传到服务命令","aria-hidden":"true"}},[a._v("#")]),a._v(" shell 中本地文件上传到服务命令")]),a._v(" "),t("p",[t("code",[a._v("scp -i")]),a._v(" mac 把本地文件上传到服务的命令,当服务器通过密钥认证")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("scp")]),a._v(" -i ~/.ssh/密钥.pem 本地文件 username@ip:/文件路径\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ssh")]),a._v(" -i ~/.ssh/密钥 username@ip\n")])])]),t("h2",{attrs:{id:"shell-中-1-的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-中-1-的作用","aria-hidden":"true"}},[a._v("#")]),a._v(" shell 中$1 的作用")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[a._v("#!/bin/sh")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"shell脚本本身的名字: '),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$0")]),a._v('"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"传给shell的第一个参数: '),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$1")]),a._v('"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"传给shell的第二个参数: '),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$2")]),a._v('"')]),a._v("\n")])])]),t("h2",{attrs:{id:"shell-中的eof用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-中的eof用法","aria-hidden":"true"}},[a._v("#")]),a._v(" shell 中的EOF用法")]),a._v(" "),t("p",[a._v("Shell中通常将EOF与 << 结合使用，表示后续的输入作为子命令或子Shell的输入，直到遇到EOF为止，再返回到主调Shell。\n可以把EOF替换成其他东西，意思是把内容当作标准输入传给程序。")]),a._v(" "),t("h2",{attrs:{id:"shell-中read命令可以获取键盘输入的字符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-中read命令可以获取键盘输入的字符","aria-hidden":"true"}},[a._v("#")]),a._v(" shell 中read命令可以获取键盘输入的字符")]),a._v(" "),t("blockquote",[t("p",[a._v("https://www.cnblogs.com/xl-892694298/p/11017168.html")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("read")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-rs"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-a ARRAY"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-d delim"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-n nchars"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-N nchars"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-p prompt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-t timeout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("-u fd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("var_name1 var_name2 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n")])])]),t("p",[a._v("read命令用于从标准输入中读取输入单行，并将读取的单行根据IFS变量分裂成多个字段，并将分割后的字段分别赋值给指定的变量列表var_name。第一个字段分配给第一个变量var_name1，第二个字段分配给第二个变量var_name2，依次到结束。如果指定的变量名少于字段数量，则多出的字段数量也同样分配给最后一个var_name，如果指定的变量命令多于字段数量，则多出的变量赋值为空。")]),a._v(" "),t("p",[a._v("如果没有指定任何var_name，则分割后的所有字段都存储在特定变量REPLY中。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("选项说明：\n-a：将分裂后的字段依次存储到指定的数组中，存储的起始位置从数组的index"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("0开始。\n-d：指定读取行的结束符号。默认结束符号为换行符。\n-n：限制读取N个字符就自动结束读取，如果没有读满N个字符就按下回车或遇到换行符，则也会结束读取。\n-N：严格要求读满N个字符才自动结束读取，即使中途按下了回车或遇到了换行符也不结束。其中换行符或回车算一个字符。\n-p：给出提示符。默认不支持"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"\\n"')]),a._v("换行，要换行需要特殊处理，见下文示例。例如，"),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-p 请输入密码："')]),a._v('\n-r：禁止反斜线的转义功能。这意味着"\\"会变成文本的一部分。\n-s：静默模式。输入的内容不会回显在屏幕上。\n-t：给出超时时间，在达到超时时间时，read退出并返回错误。也就是说不会读取任何内容，即使已经输入了一部分。\n-u：从给定文件描述符'),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("fd"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("N"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("中读取数据。\n\n")])])]),t("h3",{attrs:{id:"基本用法示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本用法示例","aria-hidden":"true"}},[a._v("#")]),a._v(" 基本用法示例")]),a._v(" "),t("p",[a._v("(1).将读取的内容分配给数组变量，从索引号0开始分配。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# read -a array_test")]),a._v("\nwhat is you name?    \n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# echo ${array_test[@]}")]),a._v("\nwhat is you name?\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# echo ${array_test[0]}")]),a._v("\nwhat\n")])])]),t("p",[a._v("(2).指定读取行的结束符号，而不再使用换行符。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# read -d '/'")]),a._v("\nwhat is you name \\//       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# 输入完尾部的"/"，自动结束read')]),a._v("\n")])])]),t("p",[a._v("由于没有指定var_name，所以通过$REPLY变量查看read读取的行。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# echo $REPLY")]),a._v("\nwhat is you name /\n")])])]),t("p",[a._v("(3).限制输入字符。")]),a._v(" "),t("p",[a._v("例如，输入了5个字符后就结束。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi tmp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# read -n 5")]),a._v("\n12345\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi tmp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# echo $REPLY   # 输入12345共5个字符")]),a._v("\n12345\n")])])]),t("p",[a._v("如果输入的字符数小于5，按下回车会立即结束读取。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# read -n 5")]),a._v("\n123\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# echo $REPLY")]),a._v("\n123\n")])])]),t("p",[a._v('但如果使用的是"-N 5"而不是"-n 5"，则严格限制读满5个字符才结束读取。')]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# read -N 5")]),a._v("\n123\\n4\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# read -N 5")]),a._v("\n123          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 3后的回车(换行)算是一个字符")]),a._v("\n4\n")])])]),t("p",[a._v("(4).使用-p选项给出输入提示。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# read -p "pls enter you name: "')]),a._v("\npls enter you name: Junmajinlong\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# echo $REPLY")]),a._v("\nJunmajinlong\n")])])]),t("p",[a._v('"-p"选项默认不带换行功能，且也不支持"\\n"换行。但通过$\'string\'的方式特殊处理，就可以实现换行的功能。例如：')]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@node2 ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# read -p $'Enter your name: \\n'")]),a._v("\nEnter your name: \nJunMaJinLong\n")])])]),t("p",[a._v("关于$'String'和$\"String\"的作用，见http://www.cnblogs.com/f-ck-need-u/p/8454364.html")]),a._v(" "),t("p",[a._v("(5).禁止反斜线转义功能。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# read -r")]),a._v("\nwhat is you name \\?\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# echo $REPLY")]),a._v("\nwhat is you name \\?\n")])])]),t("p",[a._v("(6).不回显输入的字符。比如输入密码的时候，不回显输入密码。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# read -s -p "please enter your password: "')]),a._v("\nplease enter your password:\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# echo $REPLY")]),a._v("\n123456\n")])])]),t("p",[a._v("(7).将读取的行分割后赋值给变量。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# read var1 var2 var3")]),a._v("\nabc def    galsl djks\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# echo $var1:::$var2:::$var3")]),a._v("\nabc:::def:::galsl djks\n")])])]),t("p",[a._v("(8).给出输入时间限制。没完成的输入将被丢弃，所以变量将赋值为空(如果在执行read前，变量已被赋值，则此变量在read超时后将被覆盖为空)。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# var=5")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# read -t 3 var")]),a._v("\n1\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@xuexi ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# echo $var")]),a._v("\n")])])]),t("h2",{attrs:{id:"给文件夹下的sh权限"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#给文件夹下的sh权限","aria-hidden":"true"}},[a._v("#")]),a._v(" 给文件夹下的sh权限")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cd")]),a._v(" ~/bin "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 进入bin目录下")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" -R 777 文件名/目录  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可读可写可执行")]),a._v("\n")])])])])}],!1,null,null,null);s.default=e.exports}}]);